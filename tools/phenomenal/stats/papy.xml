<tool id="power-analysis" name="PAPY">
     <description>Power Analysis Tool</description>
     <requirements>
       <container type="docker">docker-registry.phenomenal-h2020.eu/phnmnl/papy</container>
     </requirements>
     <command><![CDATA[
pa.py $testdata_input $exp_cols $sample_size $effect_size $repeats $outcome_type 4 \$PWD
       ]]>
     </command>
     <inputs>
         <param name="testdata_input" type="data" label="Test Dataset." help="Demo data set (TutorialData.csv) can be downloaded from the link below."/>
         <param name="exp_cols" type="text" value="8" label="Number of columes in the test dataset for power analysis." help="Can be either a single number, e.g., 8 or a range 2-16"/>
         <param name="sample_size" type="text" value="0:100:501" label="Sample sizes matrix." help="e.g., 0:100:501, 0 is starting number, 100 is the interval towards 501, so this example provides sample size matrix as [1, 100, 200, 300, 400, 500]"/>
         <param name="effect_size" type="text" value="0.05:0.05:0.7" label="Effect sizes matrix" help="e.g., 0.05:0.05:0.7, 0.05 is starting number, 0.05 (middle number) is the interval towards 0.7, so this example provides effect size matrix as [0.05, 0.1, 0.15, ... , 0.65]"/>
         <param name="repeats" type="text" value="10" label="Number of repeats" help="Default number is 10 repeats."/>
         <param name="outcome_type" type="select" label="Outcome Variables Type" help="The methods of power being calculated.">
            <option value="0">Classification (discrete)</option>
            <option value="1">Regression (continuous)</option>
            <option value="2">Classification (discrete) and Regression (continuous)</option> 
         </param>
     </inputs>
     <outputs>
         <data name="papy_results" format="zip" from_work_dir="papy_output_zip.zip" label="Power Analysis results. Downloadable zipped file."/>
         <data name="power_rate_byCorrection" format="html" from_work_dir="results/plot-power-rate-byCorrection-diffgroups.html" label="Proportion of Power >0.8 with Benjamini-Yekutieli correction"/>
         <data name="power_rate_byCorrection_slice" format="html" from_work_dir="results/plot-slice-power-rate-byCorrection-diffgroups.html" label="Proportion of Power >0.8 VS sample size (Benjamini-Yekutieli correction)"/>
         <data name="power_rate_byCorrection_slice_eff" format="html" from_work_dir="results/plot-slice-power-rate-byCorrection-diffgroups-eff.html" label="Proportion of Power >0.8 VS effect size (Benjamini-Yekutieli correction)"/>
         <data name="power_rate_noCorrection" format="html" from_work_dir="results/plot-power-rate-noCorrection-diffgroups.html" label="Proportion of Power >0.8 with no correction"/>
         <data name="power_rate_noCorrection_slice" format="html" from_work_dir="results/plot-slice-power-rate-noCorrection-diffgroups.html" label="Proportion of Power >0.8 VS sample size (no correction)"/>
         <data name="power_rate_noCorrection_slice_eff" format="html" from_work_dir="results/plot-slice-power-rate-noCorrection-diffgroups-eff.html" label="Proportion of Power >0.8 VS effect size (no correction)"/>
     </outputs>
     <help><![CDATA[
     
     **Power Analysis tool in PYthon**
     This Power Analysis tool estimates statistical power and sample size using realistic simulations based on a user supplied pilot data set. The tool is based on the following paper:
Blaise BJ, Correia G, Tin A, Young JH, Vergnaud AC, Lewis M, et al. Power Analysis and Sample Size Determination in Metabolic Phenotyping. Anal Chem. 2016;88(10):5179-88.
*Please cite* the paper if you use the tool.

The tool estimates power/sample size in two simple experimental designs: 1) Two-group classification and 2) Linear regression. All analyses are univariate (ANOVA or linear regression on each variable). The pilot data set should be representative of the data you expect to obtain in the full study. See the paper for more details.

**Brief description of how the tool works**
For classification, the tool simulates multivariate log-normal data of various sample sizes based on the pilot data. It then implements effects of different sizes for each variable by simulating two classes with different means. ANOVA is run on each variable and performance statistics (e.g. true positive rate) are calculated. For regression, a synthetic response is generated based on one variable at a time. Linear regression is conducted and performance statistics calculated.
     
     An example pilot data set (from the paper) and script for plotting single variables cab be downloaded as a .zip file from the link:
     https://github.com/jianlianggao/papy/blob/master/papy/papy_demoData_n_plot.zip?raw=true
     
     **Input Files**
     
     - *PilotData.csv* is the pilot data set. ***THE TESTDATA.CSV IS AN EXAMPLE OF A PILOT DATASET***
     
     - *plotSurface.py* is for plotting each single variable in the PAPY output file (zip file downloadable after PAPY runs). ***THIS IS NOT AN INPUT FILE - SUGGEST DELETE***
     
     **Output Files**	***NEED TO ADD THE OUTPUT ZIP FILE - WITH DESCRIPTION ***
     
     - *diffgroups-xxy.csv*:
	   
       'diffgroups' means corresponding to discrete (classification) outcome.
       
       'xx' is one of 'tp', 'tn', 'fp', 'fn' and 'fd', which mean 'True Positive', 'True Negative', 'False Positive', 'False Negative' and 'False Discovery' respectively.
       
       'y' is one of the correction methods, 'n', 'b', 'bh' and 'by', which mean, 'no correction', 'Bonferroni correction', 'Benjamini-Hochberg correction' and 'Benjamini-Yekutieli correction'.
       
       These files store the mean of 'xx' rate with 'y' correction in the matrix of sample size and effect size for each input variable corresponding to discrete (classification) outcome.
       
       **NOTE**: For the files with '-fdb.csv', which are for 'False Discovery', are calculated after Bonferroni correction. This tool calculates False Discovery rate under all mentioned correction methods, not limited to 'Benjamini-Hochberg' and 'Benjamini-Yekutieli' ones.
       
       
     - *diffgroups-sxxy.csv* :
       
       'diffgroups' means corresponding to discrete (classification) outcome.
       
       's' means standard deviation.
       
       'xx' is one of 'tp', 'tn', 'fp', 'fn' and 'fd', which mean 'True Positive', 'True Negative', 'False Positive', 'False Negative' and 'False Discovery' respectively.
       
       'y' is one of the correction methods, 'n', 'b', 'bh' and 'by', which mean, 'no correction', 'Bonferroni correction', 'Benjamini-Hochberg correction' and 'Benjamini-Yekutieli correction'.
       
       These files store the standard deviation of 'xx' rate with 'y' correction in the matrix of sample size and effect size for each input variable through all repeats in the simulation corresponding to discrete (classification) outcome.
       
       
     - *linearregression-xxy.csv* :
       
       'linearregression' means corresponding to continuous (regression) outcome.
       
       'xx' is one of 'tp', 'tn', 'fp', 'fn' and 'fd', which mean 'True Positive', 'True Negative', 'False Positive', 'False Negative' and 'False Discovery' respectively.
       
       'y' is one of the correction methods, 'n', 'b', 'bh' and 'by', which mean, 'no correction', 'Bonferroni correction', 'Benjamini-Hochberg correction' and 'Benjamini-Yekutieli correction'.
       
       These files store the mean of 'xx' rate with 'y' correction in the matrix of sample size and effect size for each input variable corresponding to continuous (regression) outcome.
       
       
     - *linearregression-sxxy.csv* :
       
       'linearregression' means corresponding to continuous (regression) outcome.
       
       's' means standard deviation.
       
       'xx' is one of 'tp', 'tn', 'fp', 'fn' and 'fd', which mean 'True Positive', 'True Negative', 'False Positive', 'False Negative' and 'False Discovery' respectively.
       
       'y' is one of the correction methods, 'n', 'b', 'bh' and 'by', which mean, 'no correction', 'Bonferroni correction', 'Benjamini-Hochberg correction' and 'Benjamini-Yekutieli correction'.
       
       These files store the standard deviation of 'xx' rate with 'y' correction in the matrix of sample size and effect size for each input variable through all repeats in the simulation corresponding to continuous (regression) outcome.
       
       
     - *mean-diffgroups-xxy.csv*,  *mean-diffgroups-sxxy.csv*, *mean-linearregression-xxy.csv*, *mean-linearregression-sxxy.csv*:
       
       The files with leading 'mean-' contain mean of 'xx' rate with 'y' correction in the matrix of sample size and effect size for all input variables.
       
       
     - *plot-mean-diffgroups-xxy.html*, *plot-mean-diffgroups-sxxy.html*, *plot-mean-linearregression-xxy.html*, *plot-mean-linearregression-sxxy.html*:
       
       The files with leading 'plot-' are plots of mean of 'xx' rate with 'y' correction in the matrix of sample size and effect size for all input variables.
       
       
     - *plot-power-rate-yyCorrection-diffgroups.html*, *plot-power-rate-yyCorrection-linearregression.html*: 
       
       The files are plots of mean value of proportion of variables reach the power of 0.8 in the matrix of sample size and effect size regarding the discrete or continuous outcome.
       
       'yy' is one of the correction methods, 'no', 'bonf', 'bh' and 'by', which mean, 'no correction', 'Bonferroni correction', 'Benjamini-Hochberg correction' and 'Benjamini-Yekutieli correction'.
       
       
     - *plot-slice-power-rate-yyCorrection-diffgroups.html*, *plot-slice-power-rate-yyCorrection-ln.html*: 
       
       The files are plots of slices of mean value of proportion of variables reach the power of 0.8 against sample size regarding the discrete or continuous ('ln' code in the filename) outcome. Each plot has 3 lines with error bars which are the results based on the 2nd, middle, and the 2nd last values in the effect size matrix.
       
       'yy' is one of the correction methods, 'no', 'bonf', 'bh' and 'by', which mean, 'no correction', 'Bonferroni correction', 'Benjamini-Hochberg correction' and 'Benjamini-Yekutieli correction'.
       
       
     - *plot-slice-power-rate-yyCorrection-diffgroups-eff.html*, *plot-slice-power-rate-yyCorrection-ln-eff.html*: 
       
       The files are plots of slices of mean value of proportion of variables reach the power of 0.8 against effect size regarding the discrete or continuous ('ln' code in the filename) outcome. Each plot has 3 lines with error bars which are the results based on the 2nd, middle, and the 2nd last values in the sample size matrix. ***ARE THE ERROR BARS +/- ONE STANDARD DEVIATION OR 95% CI?***
       
       'yy' is one of the correction methods, 'no', 'bonf', 'bh' and 'by', which mean, 'no correction', 'Bonferroni correction', 'Benjamini-Hochberg correction' and 'Benjamini-Yekutieli correction'.

     ]]></help>
     
     <citations> 
         <citation type="doi">10.1021/acs.analchem.6b00188</citation>
       </citations>
 </tool>
